/*
NCURSE TESTE 005

A mesh renderization test!
*/
import gui.ncurses.*;

/* Build grid */
var x0 = 5, y0 = 5;

var grid = [  "######################",
					    "#...o....*..o.....#..#",
							"#...#...$.......#.#..#",						  
							"#.....o.....#...o..*.#",
							"#...#.o...*.#...o..*.#",
							"#...o...#..........#.#",
							"#.$..#...#.#.#.#...#.#",
							"#....#..x...#....$...#",
							"#...o#.......#..#....#",
							"#.#..#...#..###...#..#",
							"#...#...$.......#.#..#",
							"#.$.....o..#...o.....#",
						  "######################"];


var n = grid.size();
var m = grid[0].size();

var i = 0;
var px = -1;
var py = -1;

/* Find player */
while (i < n) {
	var j = 0;
	while (j < m) {
		if (grid[i].charAt(j) == 'x') {
			px = i;
			py = j;
			break;
		}
		++j;
	}
	if (px > -1 || py > -1) {
		break;
	}
	++i;
}

/* Render game */
var mw = NCurses.new(true, 500);

/* colors */
/*  color: 'x' */
mw.addColor(1,  NCurses.RED,     NCurses.BLACK);
/*  color: '%' */
mw.addColor(2,  NCurses.GREEN,   NCurses.BLACK);
/*  color: '$' */
mw.addColor(3,  NCurses.YELLOW,  NCurses.BLACK);
/*  color: 'o' */
mw.addColor(4,  NCurses.BLUE,    NCurses.BLACK);
/*  color: '#' */
mw.addColor(5,  NCurses.MAGENTA, NCurses.BLACK);
/*  color: '.' */
mw.addColor(6,  NCurses.WHITE,   NCurses.BLACK);

mw.addColor(7,  NCurses.BLACK,    NCurses.WHITE);

var colors = {'x' : 1, '*' : 2, '$' : 3, 'o' : 4, '#' : 5, '.' : 6};

mw.noEcho(); 
mw.enableKeyPad();
	

var ch = 0;

/* initial position */
var px0 = px;
var py0 = py;

var nr = 0;


var moves = 200;
var no = 0;
var nS = 0;
var nP = 0;
var score = 0;

while (ch != 113 && moves > 0) {
	grid[px] = grid[px].replace('x', '.');
	if (ch == NCurses.KEY_LEFT) {
		if (py > 0 && grid[px].charAt(py-1) != '#') {
			--py;
		}
	} else if (ch == NCurses.KEY_RIGHT) {
		if (py < m && grid[px].charAt(py + 1) != '#') {
			++py;
		}
	} else if (ch == NCurses.KEY_UP) {
		if (px > 0 && grid[px - 1].charAt(py) != '#') {
			--px;
		}
	} else if (ch == NCurses.KEY_DOWN) {
		if (px < n && grid[px + 1].charAt(py) != '#') {
			++px;
		}
	} else if (ch == NCurses.KEY_HOME) {
		px = px0;
		py = py0;
	}

	if (grid[px].charAt(py) == 'o') {
		++no;
	} else if (grid[px].charAt(py) == '$') {
		++nS;
	} else if (grid[px].charAt(py) == '*') {
		++nP;
	}
	score = no + 2 * nS + 3 * nP;
	 
	var j = 0;

	var l = "";

	while (j < m) {
		if (j == py) {
			l = l + 'x';
		} else {
			l = l + grid[px].charAt(j);
		}
		++j;
	}
	grid[px] = l;

	var i = 0;

	while (i < n) {
		j = 0;
		while (j < m) {
			var c = grid[i].charAt(j);
			mw.setColor(colors[c]);
			mw.addStr(i + y0, j + x0, c);
			++j;
		}
		++i;
	}		

	mw.setColor(7);
	mw.addStr(n + y0 + 2, 2, "Press 'q' to quit.                         ");
	mw.addStr(n + y0 + 3, 2, "Position player: (" + px + "," + py + ")   ");

	mw.addStr(n + y0 + 4, 2, "---------------------------------------------");		
	mw.addStr(n + y0 + 5, 2, "Moves: " + moves + "                         ");
	
	mw.addStr(n + y0 + 6, 2, "o: " + no + "                                ");
	mw.addStr(n + y0 + 7, 2, "$: " + nS + "                                ");
	mw.addStr(n + y0 + 8, 2, "*: " + nP + "                                ");

	mw.addStr(n + y0 + 10, 2, "Score: " + (score - 0.2 * nr) + "   ");

	mw.refresh();

	ch = mw.getKey();
	--moves;
}

mw.addStr(n + x0 + 11, 2, "GAME OVER!                                               ");






