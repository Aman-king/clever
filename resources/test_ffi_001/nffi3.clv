import std.*;

// FFI STRUCTURES DECLARATION

var extS = FFITypes.new("ExtS");

extS.addMember("l1", FFITypes.DOUBLE);
extS.addMember("l2", FFITypes.INT);
extS.addMember("l3", FFITypes.INT);
extS.addMember("l4", FFITypes.DOUBLE);


extS.addMember("y", FFITypes.DOUBLE);
extS.addMember("x", FFITypes.INT);
extS.addMember("z", FFITypes.INT);
extS.addMember("w", FFITypes.DOUBLE);

// FFI STRUCTURE CREATION
var s = FFIStruct.new("ExtS");


s.setMember("x", 1);
s.setMember("y", 3.123);
s.setMember("z", 2);
s.setMember("w", 902.1231375);

println(s.x);
println(s.y);
println(s.z);
println(s.w);

var h =  FFILib.new("nffi");

// FFI CALL

h.call("setC", FFITypes.VOID, s, 1111, 33.323123, 22, 283.123);

var x = h.call("getCX", FFITypes.INT, s);
var y = h.call("getCY", FFITypes.DOUBLE, s);
var z = h.call("getCZ", FFITypes.INT, s);
var w = h.call("getCW", FFITypes.DOUBLE, s);


printf("===================\n");
println(x, y, z, w);

printf("===================\n");
println(s.x);
println(s.y);
println(s.z);
println(s.w);
println(s.w);

