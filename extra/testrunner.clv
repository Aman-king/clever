import std.io;
import std.file;
import std.sys;
import std.regex;

var passed = 0, failed = 0, time_taken = 0;

function readfile(file) {
	var fs  = file:File.new(file, file:File.IN);
	var str = '';

	while (!fs.eof()) {
		str += fs.readLine() + "\n";
	}

	fs.close();

	return str;
}

function runcode(file, code) {
	var tmp = file:File.new(file, file:File.OUT);

	tmp.write(code);

	tmp.close();

	sys:system("./clever " + file + " > " + file + ".out 2>&1");

	return readfile(file + ".out");
}

function runtest(file) {
	var content = readfile(file);
	var title_re = regex:Regex.new("[^\r\n]+");

	if (title_re.match(content)) {
		var title = title_re.group(0) + " (" + file + ")";
		var code_re = regex:Regex.new("==CODE==\s*((?s:(?!==RESULT==).)+)");

		io:print("\r[....] " + title);
		io:flush();

		if (code_re.match(content)) {
			var status;
			var ts1 = sys:microtime();
			var result = runcode(file + ".tmp", code_re.group(1)).trim();
			var ts2 = sys:microtime();
			var result_re = regex:Regex.new("==RESULT==\s*((?s:.*))");

			result_re.match(content);

			var result_re2 = regex:Regex.new(result_re.group(1).trim());

			if (result_re2.test(result)) {
				status = "PASS";
				++passed;

				file:remove(file + ".tmp");
				file:remove(file + ".tmp.out");
			} else {
				status = "FAIL";
				++failed;
			}

			time_taken += (ts2 - ts1);

			io:println("\r[" + status + "] " + title + " - " + (ts2 - ts1) + " ms");
		} else {
			io:println("Error: malformed test detected!");
			sys:exit(1);
		}
	}
}

if (sys:argc() == 1) {
	var test_dirs = file:glob("tests/*");

	for (var dir in test_dirs) {
		var files = file:glob(dir + "/*.test");

		files.each(runtest);
	}
} else {
	var test_file = sys:argv(1);

	runtest(test_file);
}

if (passed > 0 || failed > 0) {
	io:println("-----------------------------------");
	io:println("Passed tests: " + passed);
	io:println("Failed tests: " + failed);
	io:println("-----------------------------------");
	io:println("Time taken: " + time_taken);
	io:println("-----------------------------------");
}
