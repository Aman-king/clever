#
# Clever programming language
# Copyright (c) 2011-2012 Clever Team
#
# CMakeLists.modopt - Module options and other stuff
#

# Options
# ---------------------------------------------------------------------------
#      Variable               Doc String                           Enabled
option(MOD_STD_REGEX          "enable the regex module"                ON )
option(MOD_STD_FFI            "enable the ffi module"                  ON )
option(MOD_STD_FILE           "enable the file module"                 ON )
option(MOD_STD_IO             "enable the io module"                   ON )
option(MOD_STD_MATH           "enable the math module"                 ON )
option(MOD_STD_NET            "enable the net module"                  ON )
option(MOD_STD_SYS            "enable the sys module"                  ON )
option(MOD_STD_REFLECTION     "enable the reflection module"           ON )

# std.regex
if (MOD_STD_REGEX)
	if (PCRECPP_FOUND)
		add_definitions(-DHAVE_MOD_STD_REGEX)
		list(APPEND CLEVER_INCLUDE_DIRS ${PCRECPP_INCLUDE_DIRS})
		list(APPEND CLEVER_LIBRARIES ${PCRECPP_LIBRARIES})
		message(STATUS "[std.regex] enabled.")
	else (PCRECPP_FOUND)
		message(STATUS "[std.regex] libpcrecpp not found. disabling.")
		set(MOD_STD_REGEX OFF)
	endif (PCRECPP_FOUND)
else (MOD_STD_REGEX)
	message(STATUS "[std.regex] disabled.")
endif (MOD_STD_REGEX)

# std.ffi
if (MOD_STD_FFI)
	if (MSVC)
		message(STATUS "[std.ffi] not supported under msvc. disabling.")
		set(MOD_STD_FFI OFF)
	else (MSVC)
		pkg_check_modules(FFI libffi)

		if (FFI_FOUND)
			add_definitions(-DHAVE_FFI)
			add_definitions(-DHAVE_MOD_STD_FFI)
			list(APPEND CLEVER_INCLUDE_DIRS ${FFI_INCLUDE_DIRS})
			list(APPEND CLEVER_LIBRARIES ${FFI_LIBRARIES} dl)
			message(STATUS "[std.ffi] enabled.")
		else (FFI_FOUND)
			message(STATUS "[std.ffi] libffi not found. disabling.")
		endif (FFI_FOUND)
	endif (MSVC)
else (MOD_STD_FFI)
	message(STATUS "[std.ffi] disabled.")
endif (MOD_STD_FFI)

# std.file
if (MOD_STD_FILE)
	add_definitions(-DHAVE_MOD_STD_FILE)
	message(STATUS "[std.file] enabled.")
else (MOD_STD_FILE)
	message(STATUS "[std.file] disabled.")
endif (MOD_STD_FILE)

# std.io
if (MOD_STD_IO)
	add_definitions(-DHAVE_MOD_STD_IO)
	message(STATUS "[std.io] enabled.")
else (MOD_STD_IO)
	message(STATUS "[std.io] disabled.")
endif (MOD_STD_IO)

# std.math
if (MOD_STD_MATH)
	add_definitions(-DHAVE_MOD_STD_MATH)
	message(STATUS "[std.math] enabled.")
else (MOD_STD_MATH)
	message(STATUS "[std.math] disabled.")
endif (MOD_STD_MATH)

# std.net
if (MOD_STD_NET)
	if (MSVC)
		list(APPEND CLEVER_LIBRARIES ws2_32)
	endif (MSVC)

	add_definitions(-DHAVE_MOD_STD_NET)
	message(STATUS "[std.net] enabled.")
else (MOD_STD_NET)
	message(STATUS "[std.net] disabled.")
endif (MOD_STD_NET)

# std.sys
if (MOD_STD_SYS)
	add_definitions(-DHAVE_MOD_STD_SYS)
	message(STATUS "[std.sys] enabled.")
else (MOD_STD_SYS)
	message(STATUS "[std.sys] disabled.")
endif (MOD_STD_SYS)

# std.reflection
if (MOD_STD_REFLECTION)
	add_definitions(-DHAVE_MOD_STD_REFLECTION)
	message(STATUS "[std.reflection] enabled.")
else (MOD_STD_REFLECTION)
	message(STATUS "[std.reflection] disabled.")
endif (MOD_STD_REFLECTION)


